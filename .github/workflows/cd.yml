name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set Up SSH Key
      shell: bash
      run: |
        echo "${{ secrets.EC2_KEY }}" > ~/cicdkey.pem
        chmod 400 ~/cicdkey.pem

    - name: Deploy on EC2
      shell: bash
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/cicdkey.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
          docker login -u '${{ secrets.DOCKER_HUB_USERNAME }}' -p '${{ secrets.DOCKER_HUB_PASSWORD }}'
          cd /home/${{ secrets.EC2_USER }}/CICD_Project
          docker compose pull
          docker compose up --force-recreate -d
        "


# tarball is for full files updated on ec2 -------
# name: CD Pipeline

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout Code
#       uses: actions/checkout@v3

#     - name: Set Up SSH Key
#       shell: bash
#       run: |
#         echo "${{ secrets.EC2_KEY }}" > ~/cicdkey.pem
#         chmod 400 ~/cicdkey.pem

#     - name: Package and Copy Code to EC2
#       shell: bash
#       run: |
#         # Create tarball excluding .git and .github, ignore read failures
#         tar --ignore-failed-read -czf project.tar.gz --exclude='.git' --exclude='.github' .

#         # Copy tarball to EC2
#         scp -o StrictHostKeyChecking=no -i ~/cicdkey.pem project.tar.gz ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/

#     - name: Deploy on EC2
#       shell: bash
#       run: |
#         ssh -o StrictHostKeyChecking=no -i ~/cicdkey.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
#           # Extract tarball into project directory
#           tar xzf ~/project.tar.gz -C /home/${{ secrets.EC2_USER }}/CICD_Project --strip-components=1
#           # Move into project and rebuild
#           cd /home/${{ secrets.EC2_USER }}/CICD_Project
#           docker compose up --build -d
#         "



#simple CD --------

# name: CD Pipeline

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout Code
#       uses: actions/checkout@v3

#     - name: Set Up SSH Key
#       shell: bash
#       run: |
#         echo "${{ secrets.EC2_KEY }}" > ~/cicdkey.pem
#         chmod 400 ~/cicdkey.pem

#     - name: Deploy Code
#       shell: bash
#       run: |
#         # Copy all project files to the EC2 instance
#         scp -o StrictHostKeyChecking=no -i ~/cicdkey.pem -r ./bookstore_project/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/CICD_Project/
        
#         # SSH into the EC2 instance and deploy
#         ssh -o StrictHostKeyChecking=no -i ~/cicdkey.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
#           cd /home/${{ secrets.EC2_USER }}/CICD_Project &&
#           docker compose up --build -d

#         "